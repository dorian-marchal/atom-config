# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

# JS
'.source.js':
  'Console log':
    'prefix': 'cl'
    'body': 'console.log(${1});'

'.source.coffee':
  'Console log':
    'prefix': 'cl'
    'body': 'console.log ${1}'

# HTML
'.text.html':
  'Underscore template':
    'prefix': '_'
    'body': '<% ${1} %>'

  'Underscore template (interpolation)':
    'prefix': '__'
    'body': '<%= ${1} %>'

  'Underscore template (if)':
    'prefix': '_if'
    'body': '<% if (${1}) { %>'

  'Underscore template (else if)':
    'prefix': '_elsif'
    'body': '<% } else if (${1}) { %>'

  'Underscore template (else)':
    'prefix': '_else'
    'body': '<% } else { %>'

  'Underscore template (for in)':
    'prefix': '_for'
    'body': '<%= for (var i in ${1}) { %>'

# Markdown
'.source.gfm':
  'Checkbox':
    'prefix': '-'
    'body': '- [ ] '
